{"version":3,"sources":["store/schedule/actions.ts","utils/math-utils.ts","components/HourDialogComponent.tsx","components/LessonComponent.tsx","components/DayTimetableComponent.tsx","components/TimetableHeaderComponent.tsx","components/TimetableComponent.tsx","App.tsx","reportWebVitals.ts","store/schedule/reducer.ts","store/root-reducer.ts","store/schedule/epics.ts","store/root-epic.ts","services/schedule-api.ts","services/index.ts","store/index.ts","index.tsx"],"names":["loadScheduleAsync","createAsyncAction","gcd","x","y","lcm","an","length","Error","last","pop","lcm_rec","HourDialogComponent","lessons","onClose","open","handleClose","Dialog","aria-labelledby","DialogTitle","id","DialogContent","List","map","lesson","ListItem","ListItemText","primary","subject","secondary","teacher","classroom","color","DialogActions","Button","onClick","LessonComponent","height","lessonsByHour","useFitText","fontSize","ref","useState","setOpen","dialogData","setDialogData","style","overflow","e","currentTargetRect","currentTarget","getBoundingClientRect","console","log","pageX","clickPositionFrac","left","right","lessonDurationFrac","duration","xD","Math","floor","target","current","Node","contains","time_index","textAlign","getProcessedHourSlots","dayTimetable","maxCongetsion","Array","fill","i","totalWidth","filter","val","processedHourSlot","hourSchedule","processedLessons","sort","a","b","aLen","bLen","localeCompare","reamainingWidth","remainingWidth","hourSlot","lessonStart","lessonEnd","lessonMaxCongestion","max","slice","width","positionData","DayTimetableComponent","dayIdx","currentWeekInterval","flat","push","getLessonsByHour","processedHourSlots","gridRows","ToComps","result","bottomRow","backgroundColor","gridRow","toString","gridColumn","format","display","gridTemplateColumns","columnGap","gridTemplateRows","TimetableHeaderComponent","startOfLesson","hm","split","Date","setHours","parseInt","idx","Box","addMinutes","dispatchProps","loadSchedule","request","useStyles","makeStyles","theme","timetableWrapper","gridAutoFlow","connect","state","schedule","classParam","useParams","useEffect","classes","today","days","eachDayOfInterval","start","startOfWeek","weekStartsOn","end","endOfWeek","className","from","keys","App","to","path","Topics","Home","About","match","useRouteMatch","url","Topic","topicId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLoadingSchedule","createReducer","loading","error","handleAction","failure","success","action","payload","resp","scheduleReducer","combineReducers","rootReducer","loadScheduleEpic","action$","state$","api","pipe","isActionOf","switchMap","getSchedule","catchError","message","of","combineEpics","Object","values","scheduleEpics","fetch","response","json","epicMiddleware","createEpicMiddleware","dependencies","services","middlewares","enhancer","composeWithDevTools","applyMiddleware","store","createStore","run","rootEpic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2776adc.chunk.js","sourcesContent":["import { GetScheduleResponse } from \"ApiModel\";\nimport { createAsyncAction } from \"typesafe-actions\";\n\nexport const loadScheduleAsync = createAsyncAction(\n    'LOAD_SCHEDULE_REQUEST',\n    'LOAD_SCHEDULE_SUCCESS',\n    'LOAD_SCHEDULE_FAILURE'\n)<string, GetScheduleResponse, string>();","\n// NOTE(pawelp): using 'number' here is okay since we're not expecting \n// arguments larger than sqrt(2^53-1) (Number.MAX_SAFE_INTEGER). In reality we're expecting ~thousands here at any time?\n\n\nfunction gcd(x: number, y: number): number {\n    if (y > x) {\n        return gcd(y, x);\n    }\n    if (y == 0) {\n        return x;\n    }\n    return gcd(y, x % y);\n}\n\nexport function lcm(an: number[]): number {\n    if (an.length == 0) { throw Error('You need to pass at least one number!'); }\n    if (an.length == 1) return an[0];\n    if (an.length == 2) return (an[0] * an[1]) / gcd(an[0], an[1]);\n\n    const last = an.pop();\n    const lcm_rec = lcm(an);\n    return (last! * lcm_rec) / gcd(last!, lcm_rec);\n}","import React, { FunctionComponent } from \"react\";\nimport { Lesson } from 'ApiModel';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { prependOnceListener } from \"process\";\n\ntype HourDialogComponentOwnProps = {\n    lessons: Lesson[];\n    onClose: (() => void);\n    open: boolean;\n};\n\ntype LessonComponentProps = HourDialogComponentOwnProps;\n\n\nconst HourDialogComponent: FunctionComponent<LessonComponentProps> = ({ lessons, onClose, open }) => {\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    return <Dialog onClose={handleClose} aria-labelledby=\"lessons-list-dialog\" open={open}>\n        <DialogTitle id=\"lessons-list-dialog-title\">Lekcja</DialogTitle>\n        <DialogContent>\n            <List>\n                {lessons.map(lesson => (<>\n                    <ListItem key={lesson.subject + lesson.teacher + lesson.color}>\n                        <ListItemText\n                            primary={`Nazwa lekcji: ${lesson.subject}`}\n                            secondary={<>\n                                <div>Nauczyciel: {lesson.teacher}</div>\n                                <div>Sala: {lesson.classroom}</div>\n                            </>}\n                        />\n                    </ListItem>\n                    {/* <Divider variant=\"inset\" component=\"li\" /> */}\n                    </>\n                ))}\n            </List>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">Zamknij</Button>\n        </DialogActions>\n    </Dialog>\n};\n\nexport default HourDialogComponent;","import { Typography } from '@material-ui/core';\nimport { Lesson } from 'ApiModel';\nimport React, { FunctionComponent, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useFitText from 'use-fit-text';\nimport HourDialogComponent from './HourDialogComponent';\n\ntype LessonComponentOwnProps = {\n    lesson: Lesson;\n    height: string;\n    lessonsByHour: Lesson[][];\n};\n\ntype LessonComponentProps = LessonComponentOwnProps;\n\nconst LessonComponent: FunctionComponent<LessonComponentProps> = ({ lesson, height, lessonsByHour }) => {\n    const { fontSize, ref } = useFitText();\n    const [open, setOpen] = useState(false);\n    const [dialogData, setDialogData] = useState<Lesson[]>([]);\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        let currentTargetRect = e.currentTarget.getBoundingClientRect();\n        console.log(e);\n        console.log(currentTargetRect);\n        console.log(e.pageX);\n        const clickXPosRelative = e.pageX - currentTargetRect.left;\n        const clickPositionFrac = clickXPosRelative / (currentTargetRect.right - currentTargetRect.left);\n        console.log(clickPositionFrac);\n        const lessonDurationFrac = 1 / lesson.duration;\n        const xD = Math.floor(clickPositionFrac / lessonDurationFrac);\n        console.log(xD)\n\n        if (e.target === ref.current ||\n            (e.target instanceof Node && ref.current.contains(e.target))) {\n            setDialogData(lessonsByHour[lesson.time_index + xD]);\n            setOpen(true);\n        }\n    }\n\n    return <div style={{ fontSize, height: height, overflow: 'hidden' }} ref={ref} onClick={handleClick}>\n        <div style={{ textAlign: 'left' }}>{lesson.subject}</div>\n        <div style={{ textAlign: 'center' }}>{lesson.teacher}</div>\n        <div style={{ textAlign: 'right' }}>{lesson.classroom}</div>\n        <HourDialogComponent lessons={dialogData} onClose={handleClose} open={open} />\n    </div>;\n};\n\nexport default LessonComponent;","import React, { FunctionComponent } from \"react\";\nimport { DaySchedule, Lesson } from 'ApiModel';\nimport { format } from \"date-fns\";\nimport { lcm } from \"../utils/math-utils\";\nimport LessonComponent from \"./LessonComponent\";\n\nfunction getLessonsByHour(dayTimetable: DaySchedule) {\n    const lessonsByHour = [...Array(11)].map(() => Array<Lesson>());\n\n    // console.log(lessonsByHour);\n    dayTimetable.flat().map(lesson => {\n        for (let i = 0; i < lesson.duration; i++) {\n            // console.log(lesson);\n            lessonsByHour[lesson.time_index + i].push(lesson);\n        }\n    });\n    return lessonsByHour;\n}\n\ntype DayTimetableOwnProps = {\n    dayTimetable: DaySchedule;\n    dayIdx: number;\n    currentWeekInterval: Date[];\n};\n\ntype DayTimetableProps = DayTimetableOwnProps;\n\ntype PositionData = {\n    width: number,\n};\n\ntype ProcessedLesson = {\n    lesson: Lesson;\n    positionData: PositionData;\n};\n\ntype ProcessedHourSlot = {\n    lessons: Array<ProcessedLesson>; // lessons that start at current slot. Sorted by (time_index+duration, subject) descending.\n    totalWidth: number;\n    reamainingWidth: number;\n}\n\nfunction getProcessedHourSlots(dayTimetable: DaySchedule, lessonsByHour: Lesson[][]): Array<ProcessedHourSlot> {\n    const maxCongetsion = Array(11).fill(0);\n    console.log(lessonsByHour);\n    for (let i = 0; i < 11; ++i) {\n        maxCongetsion[i] = lessonsByHour[i].length;\n    }\n\n    console.log(maxCongetsion);\n\n    const totalWidth = lcm(maxCongetsion.filter(val => val != 0));\n\n    const processedHourSlot = dayTimetable.map(hourSchedule => {\n        const processedLessons = hourSchedule.map(lesson => { return { lesson } as ProcessedLesson });\n\n        processedLessons.sort((a, b) => {\n            const aLen = a.lesson.time_index + a.lesson.duration - 1;\n            const bLen = b.lesson.time_index + b.lesson.duration - 1;\n            if (aLen == bLen) {\n                return a.lesson.subject.localeCompare(b.lesson.subject);\n            }\n            return aLen > bLen ? -1 : 1;\n        });\n        return {\n            lessons: processedLessons,\n            totalWidth: totalWidth,\n            reamainingWidth: totalWidth,\n        } as ProcessedHourSlot;\n    });\n    const remainingWidth = Array(11).fill(totalWidth);\n    /// calculate remaining width for each slot individually!!!!\n    for (const hourSlot of processedHourSlot) {\n        for (const lesson of hourSlot.lessons) {\n            const lessonStart = lesson.lesson.time_index, lessonEnd = lesson.lesson.time_index + lesson.lesson.duration;\n            const lessonMaxCongestion = Math.max(...maxCongetsion.slice(lessonStart, lessonEnd));\n            const width = Math.floor(remainingWidth[lessonStart] / lessonMaxCongestion);\n            // console.log(`maxCong: ${lessonMaxCongestion}, remainingW: ${hourSlot.reamainingWidth}`);\n            lesson.positionData = { width };\n            for (let i = lessonStart; i < lessonEnd; ++i) {\n                maxCongetsion[i]--;\n                remainingWidth[i] -= width;\n            }\n        }\n    }\n\n    return processedHourSlot;\n}\n\nconst DayTimetableComponent: FunctionComponent<DayTimetableProps> = ({ dayTimetable, dayIdx, currentWeekInterval }) => {\n    if (!dayTimetable) {\n        return <div></div>;\n    }\n    // console.log(dayTimetable.flat());\n    const lessonsByHour = getLessonsByHour(dayTimetable);\n    // console.log(lessonsByHour);\n    const processedHourSlots = getProcessedHourSlots(dayTimetable, lessonsByHour);\n\n    const gridRows = processedHourSlots.length > 0 ? processedHourSlots[0].totalWidth : 1;\n    console.log(processedHourSlots);\n\n    const remainingWidth = Array(11).fill(gridRows+1);\n    const ToComps = processedHourSlots.map(hourSlot => {\n        const result = [];\n        for (const lesson of hourSlot.lessons) {\n            // console.log(`Processing: $`)\n            let bottomRow = remainingWidth[lesson.lesson.time_index];\n            result.push(<div style={\n                {\n                    backgroundColor: `${lesson.lesson.color}`,\n                    gridRow: `${(bottomRow - lesson.positionData.width).toString()} / ${bottomRow.toString()}`,\n                    gridColumn: `${(lesson.lesson.time_index+1).toString()} / ${(lesson.lesson.time_index + lesson.lesson.duration + 1).toString()}`,\n\n                }}>\n                    <LessonComponent lesson={lesson.lesson} height={(15*lesson.positionData.width / gridRows) + 'vh'} lessonsByHour={lessonsByHour}/>\n            </div>);\n            for(let i = lesson.lesson.time_index; i < lesson.lesson.time_index + lesson.lesson.duration; ++i) {\n                remainingWidth[i] -= lesson.positionData.width;\n            }\n        }\n        return result;\n    })\n    // TODO(pawelp): handle empty processedhourslots\n    return <>\n        <div>\n            {format(currentWeekInterval[dayIdx], \"EEEE\")}\n        </div>\n        <div style={{ display: 'grid', gridTemplateColumns: `repeat(11, calc(80vw/11))`, columnGap: '1px', gridTemplateRows: `repeat(${gridRows}, calc(15vh/${gridRows}))` }}>\n            {ToComps.flat()}\n        </div>\n        {/* {lessonsByHour.map((hour, idx) => <HourTimetableComponent slotIdx={idx} hourTimetable={hour} />)} */}\n    </>;\n};\n\nexport default DayTimetableComponent;\n","import { Box } from \"@material-ui/core\";\nimport { addMinutes, format } from \"date-fns\";\nimport React, { FunctionComponent } from \"react\";\nimport { start } from \"repl\";\n\n\ntype TimetableHeaderOwnProps = {\n};\n\nconst TimetableHeaderComponent: FunctionComponent<TimetableHeaderOwnProps> = () => {\n    // todo(pawelp): this is ugly. Probably should extract this data somewhere else (e.g. to redux).\n    const startOfLessonArray = [\n        '7:10', '8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '14:50', '15:40', '16:30',\n    ];\n    return <>\n        <div>Dzień</div>\n        <div style={{display: 'grid', gridTemplateColumns: 'repeat(11, calc(80vw/11))'}}>\n            {startOfLessonArray.map(startOfLesson => {\n                const hm = startOfLesson.split(':');\n                return new Date().setHours(parseInt(hm[0]), parseInt(hm[1]));\n            }).map((startOfLesson, idx) => <Box>\n                <div>{idx.toString()}</div>\n                <div>{format(startOfLesson, \"k:mm\") + \"-\" + format(addMinutes(startOfLesson, 45), \"k:mm\")}</div>\n            </Box>)}\n        </div>\n    </>;\n};\n\n\nexport default TimetableHeaderComponent;","import { Box, makeStyles } from \"@material-ui/core\";\nimport { eachDayOfInterval } from \"date-fns\";\nimport { endOfWeek, startOfWeek } from \"date-fns/esm\";\nimport { FunctionComponent, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, useParams } from \"react-router-dom\";\nimport { RootState } from \"typesafe-actions\";\nimport { loadScheduleAsync } from \"../store/schedule/actions\";\nimport DayTimetableComponent from \"./DayTimetableComponent\";\nimport TimetableHeaderComponent from \"./TimetableHeaderComponent\";\n\n\nconst mapStateToProps = (state: RootState) => ({\n    schedule: state.schedule.schedule,\n});\n\nconst dispatchProps = {\n    loadSchedule: loadScheduleAsync.request,\n}\n\ntype ScheduleParams = {\n    classParam: string,\n}\n\ntype ScheduleProps = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\n\nconst useStyles = makeStyles((theme) => ({\n    timetableWrapper: {\n        display: 'grid',\n        gridAutoFlow: 'rows',\n        gridTemplateColumns: '10vw 80vw',\n        gridTemplateRows: 'repeat(6, 15vh)',\n    },\n}));\n\nconst TimetableComponent: FunctionComponent<ScheduleProps> = ({ schedule, loadSchedule }) => {\n    console.log(\"Am I even here?\");\n    const classParam = useParams<ScheduleParams>().classParam;\n    console.log(classParam);\n    useEffect(() => { loadSchedule(classParam); }, [loadSchedule, classParam]);\n    const classes = useStyles();\n    const today = new Date();\n    const days: Date[] = eachDayOfInterval({\n        start: startOfWeek(today, { weekStartsOn: 1 }),\n        end: endOfWeek(today, { weekStartsOn: 1 }),\n    });\n\n    return <Box className={classes.timetableWrapper}>\n        <TimetableHeaderComponent />\n        {Array.from(Array(5).keys()).map(dayIdx => <DayTimetableComponent dayTimetable={schedule[dayIdx]} dayIdx={dayIdx} currentWeekInterval={days}/>)}\n        {/* Class param: {classParam} */}\n        {/* Schedule: */}\n        {/* {JSON.stringify(schedule)} */}\n    </Box>\n}\n\n\nexport default connect(mapStateToProps, dispatchProps)(TimetableComponent);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport TimetableComponent from \"./components/TimetableComponent\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          {/* <li> */}\n            {/* <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/topics\">Topics</Link>\n          </li> */}\n          <li>\n            <Link to=\"/schedule\">Schedule</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/topics\">\n            <Topics />\n          </Route>\n          <Route path=\"/schedule/:classParam\">\n            <TimetableComponent/>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nconst About = () => {\n  return <h2>About</h2>;\n}\n\nfunction Topics() {\n  let match = useRouteMatch();\n\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>\n            Props v. State\n          </Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\ninterface TopicParams {\n  topicId: string,\n};\n\nfunction Topic() {\n  let { topicId } = useParams<TopicParams>();\n  return <h3>Requested topic ID: {topicId}</h3>;\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { ScheduleStatus, WeekSchedule } from \"ApiModel\";\nimport { createReducer, RootAction, RootState } from 'typesafe-actions';\nimport { loadScheduleAsync } from \"./actions\";\n\nexport const isLoadingSchedule = createReducer({ loading: true, error: false } as ScheduleStatus)\n    .handleAction(loadScheduleAsync.request, () => ({ loading: true, error: false } as ScheduleStatus))\n    .handleAction(loadScheduleAsync.failure, () => ({ loading: false, error: true } as ScheduleStatus))\n    .handleAction(loadScheduleAsync.success, (state, action) => {\n        return {loading: false, error: !action.payload.success} as ScheduleStatus;\n    });\n\nexport const schedule = createReducer([] as WeekSchedule)\n    .handleAction(loadScheduleAsync.success, (state, action) => action.payload.resp ? action.payload.resp : []);\n\nconst scheduleReducer = combineReducers({\n    isLoadingSchedule,\n    schedule\n});\n\nexport default scheduleReducer;\nexport type ScheduleState = ReturnType<typeof scheduleReducer>;","\nimport { combineReducers } from 'redux';\nimport scheduleReducer from './schedule/reducer';\n\nconst rootReducer = combineReducers({\n  schedule: scheduleReducer,\n});\n\nexport default rootReducer;\n","import { loadScheduleAsync } from './actions';\nimport { Epic } from 'redux-observable';\nimport { RootAction, RootState, Services, isActionOf } from 'typesafe-actions';\nimport { from, of } from 'rxjs';\nimport { filter, switchMap, map, catchError } from 'rxjs/operators';\n\nexport const loadScheduleEpic: Epic<\n    RootAction,\n    RootAction,\n    RootState,\n    Services\n> = (action$, state$, { api }) => action$.pipe(\n    filter(isActionOf(loadScheduleAsync.request)),\n    switchMap((action) =>\n        from(api.schedule.getSchedule(action.payload)).pipe(\n            map(loadScheduleAsync.success),\n            catchError((message: string) => of(loadScheduleAsync.failure(message))\n            )\n        )\n    )\n);","import { combineEpics } from 'redux-observable';\n\nimport * as scheduleEpics from './schedule/epics';\n\nexport default combineEpics(\n    ...Object.values(scheduleEpics),\n);\n","import { GetScheduleResponse } from \"ApiModel\";\n\n\nexport function getSchedule(classParam: string): Promise<GetScheduleResponse> {\n    return fetch(`/api/timetable?class=${classParam}`)\n        .then(response => response.json());\n}","import * as schedule from './schedule-api';\n\nexport default {\n    api: {\n        schedule,\n    },\n};","import { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { RootAction, RootState, Services } from 'typesafe-actions';\n\nimport rootReducer from './root-reducer';\nimport rootEpic from './root-epic';\nimport services from '../services';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const epicMiddleware = createEpicMiddleware<\n  RootAction,\n  RootAction,\n  RootState,\n  Services\n>({\n  dependencies: services,\n});\n\n// configure middlewares\nconst middlewares = [epicMiddleware];\n// compose enhancers\nconst enhancer = composeWithDevTools(applyMiddleware(...middlewares));\n\n// rehydrate state on app start\nconst initialState = {};\n\n// create store\nconst store = createStore(rootReducer, enhancer);\nepicMiddleware.run(rootEpic);\n\n// export store singleton instance\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}